name: Yjs Provider - Publish Package
on:
  push:
    branches:
      - lab
      - beta
      - main
    paths:
      - "packages/yjs/**"
      - "packages/semantic-release-version-file/**"
      - ".github/workflows/yjs.ci.yml"
jobs:
  package:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.10.0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
        env:
          NPM_CONFIG_USERCONFIG: .npmrc.ci
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Create a .version.js file
        run: |
          touch packages/realtime/.version.js && echo "echo \"export const version = 'test'\" > packages/realtime/.version.js" | bash -
          touch packages/sdk/.version.js && echo "echo \"export const version = 'test'\" > packages/sdk/.version.js" | bash -
      - name: Create a .remote-config.js file
        run: |
          touch packages/realtime/.remote-config.js && echo "echo \"module.exports = { remoteConfig: { apiUrl: 'https://dev.nodeapi.superviz.com' }};\" > packages/realtime/.remote-config.js" | bash -
          touch packages/sdk/.remote-config.js && echo "echo \"module.exports = { remoteConfig: { apiUrl: 'https://dev.nodeapi.superviz.com', conferenceLayerUrl: 'https://video-frame.superviz.com/lab/index.html'}};\" > .remote-config.js" | bash -
      - run: git config --global user.name SuperViz
      - run: git config --global user.email ci@superviz.com
      - name: Publish npm package
        run: npm whoami && pnpm run semantic-release --filter=@superviz/yjs
        env:
          NPM_CONFIG_USERCONFIG: .npmrc.ci
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  slack:
    needs: package
    name: Slack Notification
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_ICON: https://avatars.slack-edge.com/2020-11-18/1496892993975_af721d1c045bea2d5a46_48.png
          MSG_MINIMAL: true
          SLACK_USERNAME: Deploy yjs provider version ${{ github.ref_name }}
